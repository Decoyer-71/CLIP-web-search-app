# 워크플로우의 이름
name: Docker Image CI

# 이 워크플로우가 언제 실행될지 정의
on:
  # main 브랜치에 push 이벤트가 발생했을 때 실행
  push:
    branches: [ "master" ]

jobs:
  # 'build_and_push' 라는 이름의 작업 정의
  build_and_push:
    # 이 작업이 실행될 가상 서버 환경을 지정 (최신 우분투)
    runs-on: ubuntu-latest

    # GitHub Container Registry에 접근하기 위한 권한 설정
    permissions:
      contents: read
      packages: write

    steps:
      # 1. GitHub 저장소의 코드를 가상 서버로 내려받음 (Checkout)
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          lfs: true # Git LFS 파일을 다운로드하는 옵션을 추가합니다.

      # 2. GHCR에 로그인하기 위한 준비
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # ${{ github.actor }}는 GitHub 사용자 이름
          # ${{ secrets.GITHUB_TOKEN }}은 워크플로우 실행을 위해 GitHub이 자동으로 생성해주는 임시 토큰
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Docker 이미지에 사용할 메타데이터(태그 등) 추출
      # 예: ghcr.io/your-username/your-repo:main, ghcr.io/your-username/your-repo:latest
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      # 4. Docker 이미지를 빌드하고 GHCR로 푸시(Push)
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./CLIP-web-search-app_v1.1
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
